import pygame
pygame.init()
WIDTH, HEIGHT = 960, 540
screen = pygame.display.set_mode((WIDTH, HEIGHT))
pygame.display.set_caption("Hiep si 36")
running = True
while running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
pygame.quit()

#################################################################

FPS = 60
TILE = 48

# Vật lý đơn giản
GRAVITY = 0.6
MAX_FALL = 14
PLAYER_SPEED = 4.2
JUMP_VEL = -12
COYOTE_MS = 120  # nhảy "cứu cánh" sau khi rời đất ~0.12s

# Màu sắc
BG = (20, 24, 28)
WHITE = (240, 240, 240)
GREY = (120, 128, 140)
GREEN = (80, 200, 120)
RED = (220, 60, 80)
YELLOW = (250, 210, 90)
CYAN = (100, 210, 230)
BROWN = (120, 90, 60)
ORANGE = (240, 150, 60)

#################################################################

class player:
    def __init__(self, x, y):
        self.rect = pygame.Rect(x, y, 20, 30)
        self.vel_x = 0
        self.vel_y = 0
        self.is_on_ground = False
        self.heart = 1

class spikes:
    def __init__(self, x, y, active_after = 200):
        self.rect = pygame.Rect(x, y, TILE, TILE)
        self.damage = 1
        self.active_after = active_after

class platform:
    def __init__(self, x, y, w, h):
        self.rect = pygame.Rect(x, y, w, h)
        self.triggered = False
        self.moving = False

class moving_snails:
    def __init__(self, x, y, path_length, speed):
        self.rect = pygame.Rect(x, y, TILE, TILE)
        self.path_length = path_length
        self.speed = speed
        self.direction = 1
        self.start_x = x
        self.damage = 0.5

class check_point:
    def __init__(self, x, y):
        self.rect = pygame.Rect(x, y, TILE, TILE)
        self.activated = False

class firethrower:
    def __init__(self, x, y, direction, active_after = 300):
        self.rect = pygame.Rect(x, y, TILE, TILE)
        self.direction = direction
        self.active_after = active_after
        self.damage = 1

class rolling_stone:
    def __init__(self, x, y, speed):
        self.rect = pygame.Rect(x, y, TILE, TILE)
        self.speed = speed
        self.damage = 1

class world:
    def __init__(self):
        self.platforms = []
        self.spikes = []
        self.moving_snails = []
        self.check_points = []
        self.firethrowers = []

